;/*
; * code1.c
; *
; * Created: 1/22/2024 9:03:09 PM
; * Author: Parisa
; */
;
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;
;
;char test;
;
;
;void main(void)
; 0000 0012 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0013 
; 0000 0014 #asm ("sei")
;PCODE: $0000000E VOL: 0
	sei
;PCODE: $0000000F VOL: 0
; 0000 0015 
; 0000 0016 UCSRA = 0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0017 UCSRB = 0b10011100; //0x98; //enable interrupt //UCSZ2
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0018 UCSRC = 0x86; //Even Parity
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0019 
; 0000 001A UBRRH = 0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001B UBRRL = 0x25;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001C 
; 0000 001D DDRB = 0xff;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001E 
; 0000 001F 
; 0000 0020 
; 0000 0021 while(1){
;PCODE: $0000001C VOL: 0
; 0000 0022 
; 0000 0023         putchar(0x55);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0024         delay_ms(1000);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0025         putchar(0x00);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0026         delay_ms(1000);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0027 
; 0000 0028     }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0029 }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;
;interrupt[USART_RXC] void usart_rx_isr(){
; 0000 002B interrupt[14] void usart_rx_isr(){
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002C 
; 0000 002D    test = getchar();
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 002E    PORTB = test;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 002F 
; 0000 0030 }
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
