;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;#define SEG_A_PORT PORTC
;#define SEG_A_DIR DDRC
;
;#define SEG_B_PORT PORTD
;#define SEG_B_DIR DDRD
;
;unsigned char segments[10] = {
;    0b00111111, // 0
;    0b00000110, // 1
;    0b01011011, // 2
;    0b01001111, // 3
;    0b01100110, // 4
;    0b01101101, // 5
;    0b01111101, // 6
;    0b00000111, // 7
;    0b01111111, // 8
;    0b01101111 // 9
;};

	.DSEG
;
;void displayDigit(unsigned char digit, unsigned char position) {
; 0000 0017 void displayDigit(unsigned char digit, unsigned char position) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0018     if (position == 0) {
;PCODE: $0000000F VOL: 0
;	digit -> Y+1
;	position -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0019         SEG_A_PORT = segments[digit];
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001A     } else {
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001B         SEG_B_PORT = segments[digit];
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 001C     }
;PCODE: $0000001F VOL: 0
; 0000 001D     delay_ms(50);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001E }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;
;void displayNumber(unsigned char number) {
; 0000 0020 void displayNumber(unsigned char number) {
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0021     unsigned char tens = number / 10;
; 0000 0022     unsigned char ones = number % 10;
; 0000 0023 
; 0000 0024     displayDigit(ones, 0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;	number -> Y+2
;	tens -> R17
;	ones -> R16
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0025     displayDigit(tens, 1);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0026 }
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;
;void main() {
; 0000 0028 void main() {
;PCODE: $00000042 VOL: 0
; 0000 0029  unsigned char remainingTime = 60;
; 0000 002A  unsigned char nextTime = 11;
; 0000 002B     SEG_A_DIR = 0xFF;
;	remainingTime -> R17
;	nextTime -> R16
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 002C     SEG_B_DIR = 0xFF;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 002D     DDRA=0XFF;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 002E 
; 0000 002F 
; 0000 0030 
; 0000 0031 
; 0000 0032 
; 0000 0033  while (1) {
;PCODE: $0000004D VOL: 0
; 0000 0034 
; 0000 0035     displayNumber(remainingTime);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0036 
; 0000 0037 
; 0000 0038 
; 0000 0039     remainingTime--;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 003A     delay_ms(100);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 003B 
; 0000 003C    if (nextTime== 11) {
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 003D         PORTA.0 = 0;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 003E         PORTA.1 = 0;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 003F         PORTA.2 = 1;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0040         PORTA.3 = 1;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0041         PORTA.4 = 0;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0042         PORTA.5 = 0;}
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0043 
; 0000 0044     if (nextTime== 50) {
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0045         PORTA.0 = 0;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0046         PORTA.1 = 1;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0047         PORTA.2 = 0;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0048         PORTA.3 = 1;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0049         PORTA.4 = 0;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 004A         PORTA.5 = 0;}
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 004B 
; 0000 004C 
; 0000 004D 
; 0000 004E 
; 0000 004F      if (nextTime== 10) {
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0050          PORTA.0 = 1;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0051         PORTA.1 = 0;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0052         PORTA.2 = 0;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0053         PORTA.3 = 0;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0054         PORTA.4 = 1;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0055         PORTA.5 = 0; }
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0056 
; 0000 0057     if (nextTime== 60) {
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0058 
; 0000 0059         PORTA.0 = 1;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 005A         PORTA.1 = 0;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 005B         PORTA.2 = 0;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 005C         PORTA.3 = 0;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 005D         PORTA.4 = 0;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 005E         PORTA.5 = 1;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 005F     }
; 0000 0060 
; 0000 0061 
; 0000 0062 
; 0000 0063 
; 0000 0064 
; 0000 0065    if (remainingTime == 0) {
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0066         remainingTime = nextTime;
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0067         if (nextTime == 11) {
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0068             nextTime = 50;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0069         } else if(nextTime==50) {
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 006A             nextTime = 10;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 006B 
; 0000 006C         } else if(nextTime==10){
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 006D             nextTime = 60;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 006E         } else{
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 006F             nextTime=11;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0070         }
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0071 
; 0000 0072 
; 0000 0073 
; 0000 0074          }
; 0000 0075 
; 0000 0076 
; 0000 0077 } }
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
