
AVRASM ver. 2.1.30  E:\microprocessor\second-cat\q3\Code\Debug\List\codeQ3.asm Mon Dec 25 21:55:43 2023

                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0032 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _digits:
00002a 06bf
00002b 4f5b
00002c ed66
00002d 07fd      	.DB  0xBF,0x6,0x5B,0x4F,0x66,0xED,0xFD,0x7
00002e efff
00002f fcf7
000030 5cb9
000031 f1f9      	.DB  0xFF,0xEF,0xF7,0xFC,0xB9,0x5C,0xF9,0xF1
                 
                 __RESET:
000032 94f8      	CLI
000033 27ee      	CLR  R30
000034 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000035 e0f1      	LDI  R31,1
000036 bffb      	OUT  GICR,R31
000037 bfeb      	OUT  GICR,R30
000038 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000039 e08d      	LDI  R24,(14-2)+1
00003a e0a2      	LDI  R26,2
00003b 27bb      	CLR  R27
                 __CLEAR_REG:
00003c 93ed      	ST   X+,R30
00003d 958a      	DEC  R24
00003e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00003f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000040 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000041 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000042 93ed      	ST   X+,R30
000043 9701      	SBIW R24,1
000044 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000045 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000046 bfed      	OUT  SPL,R30
000047 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000048 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000049 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00004a e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00004b 940c 004d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*
                 ; * codeQ3.c
                 ; *
                 ; * Created: 12/25/2023 8:41:25 PM
                 ; * Author: Parisa
                 ; */
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;flash unsigned char digits[16] = {0xBF, 0x06, 0x5B, 0x4F, 0x66, 0xED, 0xFD, 0x07, 0xFF, 0xEF, 0xF7, 0xFC, 0xB9, 0x5C, 0x ...
                 ;
                 ;long value = 0;
                 ;
                 ;void main(void)
                 ; 0000 0010 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0011 
                 ; 0000 0012 
                 ; 0000 0013 DDRC= 0xFF;
00004d efef      	LDI  R30,LOW(255)
00004e bbe4      	OUT  0x14,R30
                 ; 0000 0014 DDRD= 0xFF;
00004f bbe1      	OUT  0x11,R30
                 ; 0000 0015 DDRB= 0x00;
000050 e0e0      	LDI  R30,LOW(0)
000051 bbe7      	OUT  0x17,R30
                 ; 0000 0016 DDRA= 0x00;
000052 bbea      	OUT  0x1A,R30
                 ; 0000 0017 
                 ; 0000 0018 
                 ; 0000 0019 while (1)
                 _0x3:
                 ; 0000 001A     {
                 ; 0000 001B 
                 ; 0000 001C     value = (PINA.0 * 1) + (PINA.1 * 2) + (PINA.2 * 4) + (PINA.3 * 8) + (PINA.4 * 16) + (PINA.5 * 32) + (PINA.6 * 64) +  ...
000053 e0a0      	LDI  R26,0
000054 99c8      	SBIC 0x19,0
000055 e0a1      	LDI  R26,1
000056 e0e1      	LDI  R30,LOW(1)
000057 9fea      	MUL  R30,R26
000058 2d60      	MOV  R22,R0
000059 e0a0      	LDI  R26,0
00005a 99c9      	SBIC 0x19,1
00005b e0a1      	LDI  R26,1
00005c e0e2      	LDI  R30,LOW(2)
00005d 9fea      	MUL  R30,R26
00005e 01f0      	MOVW R30,R0
00005f 0f6e      	ADD  R22,R30
000060 e0a0      	LDI  R26,0
000061 99ca      	SBIC 0x19,2
000062 e0a1      	LDI  R26,1
000063 e0e4      	LDI  R30,LOW(4)
000064 9fea      	MUL  R30,R26
000065 01f0      	MOVW R30,R0
000066 0f6e      	ADD  R22,R30
000067 e0a0      	LDI  R26,0
000068 99cb      	SBIC 0x19,3
000069 e0a1      	LDI  R26,1
00006a e0e8      	LDI  R30,LOW(8)
00006b 9fea      	MUL  R30,R26
00006c 01f0      	MOVW R30,R0
00006d 0f6e      	ADD  R22,R30
00006e e0a0      	LDI  R26,0
00006f 99cc      	SBIC 0x19,4
000070 e0a1      	LDI  R26,1
000071 e1e0      	LDI  R30,LOW(16)
000072 9fea      	MUL  R30,R26
000073 01f0      	MOVW R30,R0
000074 0f6e      	ADD  R22,R30
000075 e0a0      	LDI  R26,0
000076 99cd      	SBIC 0x19,5
000077 e0a1      	LDI  R26,1
000078 e2e0      	LDI  R30,LOW(32)
000079 9fea      	MUL  R30,R26
00007a 01f0      	MOVW R30,R0
00007b 0f6e      	ADD  R22,R30
00007c e0a0      	LDI  R26,0
00007d 99ce      	SBIC 0x19,6
00007e e0a1      	LDI  R26,1
00007f e4e0      	LDI  R30,LOW(64)
000080 9fea      	MUL  R30,R26
000081 01f0      	MOVW R30,R0
000082 0f6e      	ADD  R22,R30
000083 e0a0      	LDI  R26,0
000084 99cf      	SBIC 0x19,7
000085 e0a1      	LDI  R26,1
000086 e8e0      	LDI  R30,LOW(128)
000087 9fea      	MUL  R30,R26
000088 01f0      	MOVW R30,R0
000089 0fe6      	ADD  R30,R22
00008a 27ff      	CLR  R31
00008b 2766      	CLR  R22
00008c 2777      	CLR  R23
00008d d08a      	RCALL SUBOPT_0x0
                 ; 0000 001D     value += (PINB.0 * 256) + (PINB.1 * 512) + (PINB.2 * 1024) + (PINB.3 * 2048) + (PINB.4 * 4096) + (PINB.5 * 8192) + ( ...
00008e e0e0      	LDI  R30,0
00008f 99b0      	SBIC 0x16,0
000090 e0e1      	LDI  R30,1
000091 2ffe      	MOV  R31,R30
000092 e0e0      	LDI  R30,0
000093 01df      	MOVW R26,R30
000094 e0e0      	LDI  R30,0
000095 99b1      	SBIC 0x16,1
000096 e0e1      	LDI  R30,1
000097 e0f0      	LDI  R31,0
000098 0fee      	LSL  R30
000099 1fff      	ROL  R31
00009a d086      	RCALL SUBOPT_0x1
00009b e0e0      	LDI  R30,0
00009c 99b2      	SBIC 0x16,2
00009d e0e1      	LDI  R30,1
00009e e0f0      	LDI  R31,0
00009f 940e 015e 	CALL __LSLW2
0000a1 d07f      	RCALL SUBOPT_0x1
0000a2 e0e0      	LDI  R30,0
0000a3 99b3      	SBIC 0x16,3
0000a4 e0e1      	LDI  R30,1
0000a5 e0f0      	LDI  R31,0
0000a6 940e 015c 	CALL __LSLW3
0000a8 d078      	RCALL SUBOPT_0x1
0000a9 e0e0      	LDI  R30,0
0000aa 99b4      	SBIC 0x16,4
0000ab e0e1      	LDI  R30,1
0000ac e0f0      	LDI  R31,0
0000ad 940e 015a 	CALL __LSLW4
0000af 2ffe      	MOV  R31,R30
0000b0 e0e0      	LDI  R30,0
0000b1 0fea      	ADD  R30,R26
0000b2 1ffb      	ADC  R31,R27
0000b3 01bf      	MOVW R22,R30
0000b4 e0e0      	LDI  R30,0
0000b5 99b5      	SBIC 0x16,5
0000b6 e0e1      	LDI  R30,1
0000b7 e0f0      	LDI  R31,0
0000b8 e0a0      	LDI  R26,LOW(8192)
0000b9 e2b0      	LDI  R27,HIGH(8192)
0000ba 940e 016b 	CALL __MULW12
                +
0000bc 0f6e     +ADD R22 , R30
0000bd 1f7f     +ADC R23 , R31
                 	__ADDWRR 22,23,30,31
0000be e0e0      	LDI  R30,0
0000bf 99b6      	SBIC 0x16,6
0000c0 e0e1      	LDI  R30,1
0000c1 e0f0      	LDI  R31,0
0000c2 e0a0      	LDI  R26,LOW(16384)
0000c3 e4b0      	LDI  R27,HIGH(16384)
0000c4 940e 016b 	CALL __MULW12
                +
0000c6 0f6e     +ADD R22 , R30
0000c7 1f7f     +ADC R23 , R31
                 	__ADDWRR 22,23,30,31
0000c8 e0e0      	LDI  R30,0
0000c9 99b7      	SBIC 0x16,7
0000ca e0e1      	LDI  R30,1
0000cb e0f0      	LDI  R31,0
0000cc e0a0      	LDI  R26,LOW(32768)
0000cd e8b0      	LDI  R27,HIGH(32768)
0000ce 940e 0163 	CALL __MULW12U
0000d0 0fe6      	ADD  R30,R22
0000d1 1ff7      	ADC  R31,R23
0000d2 d053      	RCALL SUBOPT_0x2
0000d3 2766      	CLR  R22
0000d4 2777      	CLR  R23
0000d5 940e 0149 	CALL __ADDD12
0000d7 d040      	RCALL SUBOPT_0x0
                 ; 0000 001E 
                 ; 0000 001F     PORTD = 0x10;
0000d8 e1e0      	LDI  R30,LOW(16)
0000d9 bbe2      	OUT  0x12,R30
                 ; 0000 0020     PORTC = digits[value % 10];
0000da d04b      	RCALL SUBOPT_0x2
                +
0000db e0ea     +LDI R30 , LOW ( 0xA )
0000dc e0f0     +LDI R31 , HIGH ( 0xA )
0000dd e060     +LDI R22 , BYTE3 ( 0xA )
0000de e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
0000df 940e 019a 	CALL __MODD21
0000e1 d04d      	RCALL SUBOPT_0x3
                 ; 0000 0021     delay_ms(10);
                 ; 0000 0022 
                 ; 0000 0023     PORTD = 0x08;
0000e2 e0e8      	LDI  R30,LOW(8)
0000e3 bbe2      	OUT  0x12,R30
                 ; 0000 0024     PORTC = digits[(value % 100) / 10];
0000e4 d041      	RCALL SUBOPT_0x2
                +
0000e5 e6e4     +LDI R30 , LOW ( 0x64 )
0000e6 e0f0     +LDI R31 , HIGH ( 0x64 )
0000e7 e060     +LDI R22 , BYTE3 ( 0x64 )
0000e8 e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
0000e9 d04d      	RCALL SUBOPT_0x4
                +
0000ea e0ea     +LDI R30 , LOW ( 0xA )
0000eb e0f0     +LDI R31 , HIGH ( 0xA )
0000ec e060     +LDI R22 , BYTE3 ( 0xA )
0000ed e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
0000ee d04d      	RCALL SUBOPT_0x5
                 ; 0000 0025     delay_ms(10);
                 ; 0000 0026 
                 ; 0000 0027     PORTD = 0x04;
0000ef e0e4      	LDI  R30,LOW(4)
0000f0 bbe2      	OUT  0x12,R30
                 ; 0000 0028     PORTC = digits[(value % 1000) / 100];
0000f1 d034      	RCALL SUBOPT_0x2
                +
0000f2 eee8     +LDI R30 , LOW ( 0x3E8 )
0000f3 e0f3     +LDI R31 , HIGH ( 0x3E8 )
0000f4 e060     +LDI R22 , BYTE3 ( 0x3E8 )
0000f5 e070     +LDI R23 , BYTE4 ( 0x3E8 )
                 	__GETD1N 0x3E8
0000f6 d040      	RCALL SUBOPT_0x4
                +
0000f7 e6e4     +LDI R30 , LOW ( 0x64 )
0000f8 e0f0     +LDI R31 , HIGH ( 0x64 )
0000f9 e060     +LDI R22 , BYTE3 ( 0x64 )
0000fa e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
0000fb d040      	RCALL SUBOPT_0x5
                 ; 0000 0029     delay_ms(10);
                 ; 0000 002A 
                 ; 0000 002B     PORTD = 0x02;
0000fc e0e2      	LDI  R30,LOW(2)
0000fd bbe2      	OUT  0x12,R30
                 ; 0000 002C     PORTC = digits[(value % 10000) / 1000];
0000fe d027      	RCALL SUBOPT_0x2
                +
0000ff e1e0     +LDI R30 , LOW ( 0x2710 )
000100 e2f7     +LDI R31 , HIGH ( 0x2710 )
000101 e060     +LDI R22 , BYTE3 ( 0x2710 )
000102 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000103 d033      	RCALL SUBOPT_0x4
                +
000104 eee8     +LDI R30 , LOW ( 0x3E8 )
000105 e0f3     +LDI R31 , HIGH ( 0x3E8 )
000106 e060     +LDI R22 , BYTE3 ( 0x3E8 )
000107 e070     +LDI R23 , BYTE4 ( 0x3E8 )
                 	__GETD1N 0x3E8
000108 d033      	RCALL SUBOPT_0x5
                 ; 0000 002D     delay_ms(10);
                 ; 0000 002E 
                 ; 0000 002F     PORTD = 0x01;
000109 e0e1      	LDI  R30,LOW(1)
00010a bbe2      	OUT  0x12,R30
                 ; 0000 0030     PORTC = digits[(value % 100000) / 10000];
00010b d01a      	RCALL SUBOPT_0x2
                +
00010c eae0     +LDI R30 , LOW ( 0x186A0 )
00010d e8f6     +LDI R31 , HIGH ( 0x186A0 )
00010e e061     +LDI R22 , BYTE3 ( 0x186A0 )
00010f e070     +LDI R23 , BYTE4 ( 0x186A0 )
                 	__GETD1N 0x186A0
000110 d026      	RCALL SUBOPT_0x4
                +
000111 e1e0     +LDI R30 , LOW ( 0x2710 )
000112 e2f7     +LDI R31 , HIGH ( 0x2710 )
000113 e060     +LDI R22 , BYTE3 ( 0x2710 )
000114 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000115 d026      	RCALL SUBOPT_0x5
                 ; 0000 0031     delay_ms(10);
                 ; 0000 0032 
                 ; 0000 0033 
                 ; 0000 0034 
                 ; 0000 0035     }
000116 cf3c      	RJMP _0x3
                 ; 0000 0036 }
                 _0x6:
000117 cfff      	RJMP _0x6
                 ; .FEND
                 
                 	.DSEG
                 _value:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
000118 93e0 0160 	STS  _value,R30
00011a 93f0 0161 	STS  _value+1,R31
00011c 9360 0162 	STS  _value+2,R22
00011e 9370 0163 	STS  _value+3,R23
000120 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000121 2ffe      	MOV  R31,R30
000122 e0e0      	LDI  R30,0
000123 0fae      	ADD  R26,R30
000124 1fbf      	ADC  R27,R31
000125 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x2:
000126 91a0 0160 	LDS  R26,_value
000128 91b0 0161 	LDS  R27,_value+1
00012a 9180 0162 	LDS  R24,_value+2
00012c 9190 0163 	LDS  R25,_value+3
00012e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3:
00012f 5aec      	SUBI R30,LOW(-_digits*2)
000130 4fff      	SBCI R31,HIGH(-_digits*2)
000131 9004      	LPM  R0,Z
000132 ba05      	OUT  0x15,R0
000133 e0aa      	LDI  R26,LOW(10)
000134 e0b0      	LDI  R27,0
000135 940c 013f 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000137 940e 019a 	CALL __MODD21
000139 01df      	MOVW R26,R30
00013a 01cb      	MOVW R24,R22
00013b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
00013c 940e 0195 	CALL __DIVD21
00013e cff0      	RJMP SUBOPT_0x3
                 
                 
                 	.CSEG
                 _delay_ms:
00013f 9610      	adiw r26,0
000140 f039      	breq __delay_ms1
                 __delay_ms0:
000141 95a8      	wdr
                +
000142 ed80     +LDI R24 , LOW ( 0x7D0 )
000143 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000144 9701     +SBIW R24 , 1
000145 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000146 9711      	sbiw r26,1
000147 f7c9      	brne __delay_ms0
                 __delay_ms1:
000148 9508      	ret
                 
                 __ADDD12:
000149 0fea      	ADD  R30,R26
00014a 1ffb      	ADC  R31,R27
00014b 1f68      	ADC  R22,R24
00014c 1f79      	ADC  R23,R25
00014d 9508      	RET
                 
                 __ANEGW1:
00014e 95f1      	NEG  R31
00014f 95e1      	NEG  R30
000150 40f0      	SBCI R31,0
000151 9508      	RET
                 
                 __ANEGD1:
000152 95f0      	COM  R31
000153 9560      	COM  R22
000154 9570      	COM  R23
000155 95e1      	NEG  R30
000156 4fff      	SBCI R31,-1
000157 4f6f      	SBCI R22,-1
000158 4f7f      	SBCI R23,-1
000159 9508      	RET
                 
                 __LSLW4:
00015a 0fee      	LSL  R30
00015b 1fff      	ROL  R31
                 __LSLW3:
00015c 0fee      	LSL  R30
00015d 1fff      	ROL  R31
                 __LSLW2:
00015e 0fee      	LSL  R30
00015f 1fff      	ROL  R31
000160 0fee      	LSL  R30
000161 1fff      	ROL  R31
000162 9508      	RET
                 
                 __MULW12U:
000163 9ffa      	MUL  R31,R26
000164 2df0      	MOV  R31,R0
000165 9feb      	MUL  R30,R27
000166 0df0      	ADD  R31,R0
000167 9fea      	MUL  R30,R26
000168 2de0      	MOV  R30,R0
000169 0df1      	ADD  R31,R1
00016a 9508      	RET
                 
                 __MULW12:
00016b d042      	RCALL __CHKSIGNW
00016c dff6      	RCALL __MULW12U
00016d f40e      	BRTC __MULW121
00016e dfdf      	RCALL __ANEGW1
                 __MULW121:
00016f 9508      	RET
                 
                 __DIVD21U:
000170 933f      	PUSH R19
000171 934f      	PUSH R20
000172 935f      	PUSH R21
000173 2400      	CLR  R0
000174 2411      	CLR  R1
000175 2744      	CLR  R20
000176 2755      	CLR  R21
000177 e230      	LDI  R19,32
                 __DIVD21U1:
000178 0faa      	LSL  R26
000179 1fbb      	ROL  R27
00017a 1f88      	ROL  R24
00017b 1f99      	ROL  R25
00017c 1c00      	ROL  R0
00017d 1c11      	ROL  R1
00017e 1f44      	ROL  R20
00017f 1f55      	ROL  R21
000180 1a0e      	SUB  R0,R30
000181 0a1f      	SBC  R1,R31
000182 0b46      	SBC  R20,R22
000183 0b57      	SBC  R21,R23
000184 f428      	BRCC __DIVD21U2
000185 0e0e      	ADD  R0,R30
000186 1e1f      	ADC  R1,R31
000187 1f46      	ADC  R20,R22
000188 1f57      	ADC  R21,R23
000189 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00018a 60a1      	SBR  R26,1
                 __DIVD21U3:
00018b 953a      	DEC  R19
00018c f759      	BRNE __DIVD21U1
00018d 01fd      	MOVW R30,R26
00018e 01bc      	MOVW R22,R24
00018f 01d0      	MOVW R26,R0
000190 01ca      	MOVW R24,R20
000191 915f      	POP  R21
000192 914f      	POP  R20
000193 913f      	POP  R19
000194 9508      	RET
                 
                 __DIVD21:
000195 d026      	RCALL __CHKSIGND
000196 dfd9      	RCALL __DIVD21U
000197 f40e      	BRTC __DIVD211
000198 dfb9      	RCALL __ANEGD1
                 __DIVD211:
000199 9508      	RET
                 
                 __MODD21:
00019a 94e8      	CLT
00019b ff97      	SBRS R25,7
00019c c009      	RJMP __MODD211
00019d 95a0      	COM  R26
00019e 95b0      	COM  R27
00019f 9580      	COM  R24
0001a0 9590      	COM  R25
0001a1 5faf      	SUBI R26,-1
0001a2 4fbf      	SBCI R27,-1
0001a3 4f8f      	SBCI R24,-1
0001a4 4f9f      	SBCI R25,-1
0001a5 9468      	SET
                 __MODD211:
0001a6 fd77      	SBRC R23,7
0001a7 dfaa      	RCALL __ANEGD1
0001a8 dfc7      	RCALL __DIVD21U
0001a9 01fd      	MOVW R30,R26
0001aa 01bc      	MOVW R22,R24
0001ab f40e      	BRTC __MODD212
0001ac dfa5      	RCALL __ANEGD1
                 __MODD212:
0001ad 9508      	RET
                 
                 __CHKSIGNW:
0001ae 94e8      	CLT
0001af fff7      	SBRS R31,7
0001b0 c002      	RJMP __CHKSW1
0001b1 df9c      	RCALL __ANEGW1
0001b2 9468      	SET
                 __CHKSW1:
0001b3 ffb7      	SBRS R27,7
0001b4 c006      	RJMP __CHKSW2
0001b5 95a0      	COM  R26
0001b6 95b0      	COM  R27
0001b7 9611      	ADIW R26,1
0001b8 f800      	BLD  R0,0
0001b9 9403      	INC  R0
0001ba fa00      	BST  R0,0
                 __CHKSW2:
0001bb 9508      	RET
                 
                 __CHKSIGND:
0001bc 94e8      	CLT
0001bd ff77      	SBRS R23,7
0001be c002      	RJMP __CHKSD1
0001bf df92      	RCALL __ANEGD1
0001c0 9468      	SET
                 __CHKSD1:
0001c1 ff97      	SBRS R25,7
0001c2 c00b      	RJMP __CHKSD2
0001c3 2400      	CLR  R0
0001c4 95a0      	COM  R26
0001c5 95b0      	COM  R27
0001c6 9580      	COM  R24
0001c7 9590      	COM  R25
0001c8 9611      	ADIW R26,1
0001c9 1d80      	ADC  R24,R0
0001ca 1d90      	ADC  R25,R0
0001cb f800      	BLD  R0,0
0001cc 9403      	INC  R0
0001cd fa00      	BST  R0,0
                 __CHKSD2:
0001ce 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  27 r1 :   5 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   4 r20:   7 r21:   6 r22:  32 r23:  22 
r24:  17 r25:  11 r26:  51 r27:  16 r28:   1 r29:   1 r30: 112 r31:  46 
x  :   2 y  :   0 z  :   1 
Registers used: 17 out of 35 (48.6%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  13 add   :  16 
adiw  :   3 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   1 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :   5 brpl  :   0 brsh  :   0 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   2 call  :  10 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  12 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :  13 
cp    :   0 cpc   :   0 cpi   :   0 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   2 jmp   :  23 ld    :   0 ldd   :   0 ldi   : 114 
lds   :   4 lpm   :   2 lsl   :   6 lsr   :   0 mov   :   6 movw  :  17 
mul   :  11 muls  :   0 mulsu :   0 neg   :   3 nop   :   0 or    :   0 
ori   :   0 out   :  16 pop   :   3 push  :   3 rcall :  31 ret   :  16 
reti  :   0 rjmp  :   9 rol   :  12 ror   :   0 sbc   :   3 sbci  :   8 
sbi   :   0 sbic  :  16 sbis  :   0 sbiw  :   3 sbr   :   1 sbrc  :   1 
sbrs  :   5 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   2 std   :   0 sts   :   4 sub   :   1 subi  :   2 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 45 out of 116 (38.8%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00039e    910     16    926   16384   5.7%
[.dseg] 0x000060 0x000164      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 0 warnings
