
AVRASM ver. 2.1.30  E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm Mon Jan 22 19:31:22 2024

E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm(1088): warning: Register r4 already defined by the .DEF directive
E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm(1089): warning: Register r5 already defined by the .DEF directive
E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm(1090): warning: Register r6 already defined by the .DEF directive
E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm(1091): warning: Register r7 already defined by the .DEF directive
E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm(1092): warning: Register r8 already defined by the .DEF directive
E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm(1093): warning: Register r9 already defined by the .DEF directive
E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm(1094): warning: Register r11 already defined by the .DEF directive
E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm(1095): warning: Register r10 already defined by the .DEF directive
E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm(1096): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R4
                 	.DEF _i_msb=R5
                 	.DEF _j=R6
                 	.DEF _j_msb=R7
                 	.DEF _value=R8
                 	.DEF _value_msb=R9
                 	.DEF __lcd_x=R11
                 	.DEF __lcd_y=R10
                 	.DEF __lcd_maxx=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0040 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000
000034 0000      	.DB  0x0,0x0,0x0,0x0
000035 0000      	.DB  0x0,0x0
                 
                 _0x0:
000036 6425
E:\microprocessor\second-cat\q5\codeq5\Debug\List\q5.asm(1139): warning: .cseg .db misalignment - padding zero byte
000037 0000      	.DB  0x25,0x64,0x0
                 _0x2020003:
000038 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000039 0006      	.DW  0x06
00003a 0004      	.DW  0x04
00003b 0066      	.DW  __REG_VARS*2
                 
00003c 0002      	.DW  0x02
00003d 0264      	.DW  __base_y_G101
00003e 0070      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
00003f 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000040 94f8      	CLI
000041 27ee      	CLR  R30
000042 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000043 e0f1      	LDI  R31,1
000044 bffb      	OUT  GICR,R31
000045 bfeb      	OUT  GICR,R30
000046 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000047 e08d      	LDI  R24,(14-2)+1
000048 e0a2      	LDI  R26,2
000049 27bb      	CLR  R27
                 __CLEAR_REG:
00004a 93ed      	ST   X+,R30
00004b 958a      	DEC  R24
00004c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004e e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000050 93ed      	ST   X+,R30
000051 9701      	SBIW R24,1
000052 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000053 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000054 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000055 9185      	LPM  R24,Z+
000056 9195      	LPM  R25,Z+
000057 9700      	SBIW R24,0
000058 f061      	BREQ __GLOBAL_INI_END
000059 91a5      	LPM  R26,Z+
00005a 91b5      	LPM  R27,Z+
00005b 9005      	LPM  R0,Z+
00005c 9015      	LPM  R1,Z+
00005d 01bf      	MOVW R22,R30
00005e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005f 9005      	LPM  R0,Z+
000060 920d      	ST   X+,R0
000061 9701      	SBIW R24,1
000062 f7e1      	BRNE __GLOBAL_INI_LOOP
000063 01fb      	MOVW R30,R22
000064 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000065 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000066 bfed      	OUT  SPL,R30
000067 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000068 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000069 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006a e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006b 940c 006d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*
                 ; * q5.c
                 ; *
                 ; * Created: 1/22/2024 6:53:24 PM
                 ; * Author: Parisa
                 ; */
                 ;
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <lcd.h>
                 ;
                 ;
                 ;#asm
                 .equ __lcd_port  = 0x15
                 ; 0000 0011 #endasm
                 ;
                 ;int i = 0;
                 ;int j = 0;
                 ;
                 ;char b[4];
                 ;int value = 0;
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 001C {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 001D DDRC = 0xff;
00006d efef      	LDI  R30,LOW(255)
00006e bbe4      	OUT  0x14,R30
                 ; 0000 001E DDRA = 0x00;
00006f e0e0      	LDI  R30,LOW(0)
000070 bbea      	OUT  0x1A,R30
                 ; 0000 001F 
                 ; 0000 0020 lcd_init(16);
000071 e1a0      	LDI  R26,LOW(16)
000072 940e 032f 	CALL _lcd_init
                 ; 0000 0021 lcd_clear();
000074 940e 02e0 	CALL _lcd_clear
                 ; 0000 0022 
                 ; 0000 0023 
                 ; 0000 0024 while (1)
                 _0x3:
                 ; 0000 0025     {
                 ; 0000 0026 
                 ; 0000 0027         for(j = 0; j < 2; j++){
000076 2466      	CLR  R6
000077 2477      	CLR  R7
                 _0x7:
000078 e0e2      	LDI  R30,LOW(2)
000079 e0f0      	LDI  R31,HIGH(2)
00007a 166e      	CP   R6,R30
00007b 067f      	CPC  R7,R31
00007c f00c      	BRLT PC+2
00007d c068      	RJMP _0x8
                 ; 0000 0028 
                 ; 0000 0029             for(i = 15; i >= 0; i--){
00007e e0ef      	LDI  R30,LOW(15)
00007f e0f0      	LDI  R31,HIGH(15)
000080 012f      	MOVW R4,R30
                 _0xA:
000081 2400      	CLR  R0
000082 1440      	CP   R4,R0
000083 0450      	CPC  R5,R0
000084 f40c      	BRGE PC+2
000085 c05c      	RJMP _0xB
                 ; 0000 002A 
                 ; 0000 002B                 value = (PINA.0 * 1) + (PINA.1 * 2) + (PINA.2 * 4) + (PINA.3 * 8) + (PINA.4 * 16) + (PINA.5 * 32) + (PIN ...
000086 e0a0      	LDI  R26,0
000087 99c8      	SBIC 0x19,0
000088 e0a1      	LDI  R26,1
000089 e0e1      	LDI  R30,LOW(1)
00008a 9fea      	MUL  R30,R26
00008b 2d60      	MOV  R22,R0
00008c e0a0      	LDI  R26,0
00008d 99c9      	SBIC 0x19,1
00008e e0a1      	LDI  R26,1
00008f e0e2      	LDI  R30,LOW(2)
000090 9fea      	MUL  R30,R26
000091 01f0      	MOVW R30,R0
000092 0f6e      	ADD  R22,R30
000093 e0a0      	LDI  R26,0
000094 99ca      	SBIC 0x19,2
000095 e0a1      	LDI  R26,1
000096 e0e4      	LDI  R30,LOW(4)
000097 9fea      	MUL  R30,R26
000098 01f0      	MOVW R30,R0
000099 0f6e      	ADD  R22,R30
00009a e0a0      	LDI  R26,0
00009b 99cb      	SBIC 0x19,3
00009c e0a1      	LDI  R26,1
00009d e0e8      	LDI  R30,LOW(8)
00009e 9fea      	MUL  R30,R26
00009f 01f0      	MOVW R30,R0
0000a0 0f6e      	ADD  R22,R30
0000a1 e0a0      	LDI  R26,0
0000a2 99cc      	SBIC 0x19,4
0000a3 e0a1      	LDI  R26,1
0000a4 e1e0      	LDI  R30,LOW(16)
0000a5 9fea      	MUL  R30,R26
0000a6 01f0      	MOVW R30,R0
0000a7 0f6e      	ADD  R22,R30
0000a8 e0a0      	LDI  R26,0
0000a9 99cd      	SBIC 0x19,5
0000aa e0a1      	LDI  R26,1
0000ab e2e0      	LDI  R30,LOW(32)
0000ac 9fea      	MUL  R30,R26
0000ad 01f0      	MOVW R30,R0
0000ae 0f6e      	ADD  R22,R30
0000af e0a0      	LDI  R26,0
0000b0 99ce      	SBIC 0x19,6
0000b1 e0a1      	LDI  R26,1
0000b2 e4e0      	LDI  R30,LOW(64)
0000b3 9fea      	MUL  R30,R26
0000b4 01f0      	MOVW R30,R0
0000b5 0f6e      	ADD  R22,R30
0000b6 e0a0      	LDI  R26,0
0000b7 99cf      	SBIC 0x19,7
0000b8 e0a1      	LDI  R26,1
0000b9 e8e0      	LDI  R30,LOW(128)
0000ba 9fea      	MUL  R30,R26
0000bb 01f0      	MOVW R30,R0
0000bc 0fe6      	ADD  R30,R22
0000bd 2e8e      	MOV  R8,R30
0000be 2499      	CLR  R9
                 ; 0000 002C                 sprintf(b,"%d",value);
0000bf e6e0      	LDI  R30,LOW(_b)
0000c0 e0f2      	LDI  R31,HIGH(_b)
0000c1 93fa      	ST   -Y,R31
0000c2 93ea      	ST   -Y,R30
                +
0000c3 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000c4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000c5 93fa      	ST   -Y,R31
0000c6 93ea      	ST   -Y,R30
0000c7 01f4      	MOVW R30,R8
0000c8 940e 03c2 	CALL __CWD1
0000ca 940e 03cf 	CALL __PUTPARD1
0000cc e084      	LDI  R24,4
0000cd 940e 025c 	CALL _sprintf
0000cf 9628      	ADIW R28,8
                 ; 0000 002D                 lcd_clear();
0000d0 940e 02e0 	CALL _lcd_clear
                 ; 0000 002E                 lcd_gotoxy(i,j);
0000d2 924a      	ST   -Y,R4
0000d3 2da6      	MOV  R26,R6
0000d4 940e 02d0 	CALL _lcd_gotoxy
                 ; 0000 002F                 lcd_puts(b);
0000d6 e6a0      	LDI  R26,LOW(_b)
0000d7 e0b2      	LDI  R27,HIGH(_b)
0000d8 940e 030d 	CALL _lcd_puts
                 ; 0000 0030                 delay_ms(100);
0000da e6a4      	LDI  R26,LOW(100)
0000db e0b0      	LDI  R27,0
0000dc 940e 03b0 	CALL _delay_ms
                 ; 0000 0031             }
0000de 01f2      	MOVW R30,R4
0000df 9731      	SBIW R30,1
0000e0 012f      	MOVW R4,R30
0000e1 cf9f      	RJMP _0xA
                 _0xB:
                 ; 0000 0032 
                 ; 0000 0033         }
0000e2 01f3      	MOVW R30,R6
0000e3 9631      	ADIW R30,1
0000e4 013f      	MOVW R6,R30
0000e5 cf92      	RJMP _0x7
                 _0x8:
                 ; 0000 0034 
                 ; 0000 0035     }
0000e6 cf8f      	RJMP _0x3
                 ; 0000 0036 }
                 _0xC:
0000e7 cfff      	RJMP _0xC
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000e8 93ba      	ST   -Y,R27
0000e9 93aa      	ST   -Y,R26
0000ea 931a      	ST   -Y,R17
0000eb 930a      	ST   -Y,R16
0000ec 81aa      	LDD  R26,Y+2
0000ed 81bb      	LDD  R27,Y+2+1
0000ee 9612      	ADIW R26,2
0000ef 940e 03c7 	CALL __GETW1P
0000f1 9730      	SBIW R30,0
0000f2 f159      	BREQ _0x2000010
0000f3 81aa      	LDD  R26,Y+2
0000f4 81bb      	LDD  R27,Y+2+1
0000f5 9614      	ADIW R26,4
0000f6 940e 03c7 	CALL __GETW1P
0000f8 018f      	MOVW R16,R30
0000f9 9730      	SBIW R30,0
0000fa f061      	BREQ _0x2000012
                +
0000fb 3002     +CPI R16 , LOW ( 2 )
0000fc e0e0     +LDI R30 , HIGH ( 2 )
0000fd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000fe f098      	BRLO _0x2000013
0000ff 01f8      	MOVW R30,R16
000100 9731      	SBIW R30,1
000101 018f      	MOVW R16,R30
                +
000102 81aa     +LDD R26 , Y + 2
000103 81bb     +LDD R27 , Y + 2 + 1
000104 9614     +ADIW R26 , 4
000105 93ed     +ST X + , R30
000106 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000107 81aa      	LDD  R26,Y+2
000108 81bb      	LDD  R27,Y+2+1
000109 9612      	ADIW R26,2
00010a 91ed      	LD   R30,X+
00010b 91fd      	LD   R31,X+
00010c 9631      	ADIW R30,1
00010d 93fe      	ST   -X,R31
00010e 93ee      	ST   -X,R30
00010f 9731      	SBIW R30,1
000110 81ac      	LDD  R26,Y+4
000111 83a0      	STD  Z+0,R26
                 _0x2000013:
000112 81aa      	LDD  R26,Y+2
000113 81bb      	LDD  R27,Y+2+1
000114 940e 03c7 	CALL __GETW1P
000116 23ff      	TST  R31
000117 f02a      	BRMI _0x2000014
000118 91ed      	LD   R30,X+
000119 91fd      	LD   R31,X+
00011a 9631      	ADIW R30,1
00011b 93fe      	ST   -X,R31
00011c 93ee      	ST   -X,R30
                 _0x2000014:
00011d c006      	RJMP _0x2000015
                 _0x2000010:
00011e 81aa      	LDD  R26,Y+2
00011f 81bb      	LDD  R27,Y+2+1
000120 efef      	LDI  R30,LOW(65535)
000121 efff      	LDI  R31,HIGH(65535)
000122 93ed      	ST   X+,R30
000123 93fc      	ST   X,R31
                 _0x2000015:
000124 8119      	LDD  R17,Y+1
000125 8108      	LDD  R16,Y+0
000126 9625      	ADIW R28,5
000127 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000128 93ba      	ST   -Y,R27
000129 93aa      	ST   -Y,R26
00012a 9726      	SBIW R28,6
00012b 940e 03d4 	CALL __SAVELOCR6
00012d e010      	LDI  R17,0
00012e 85ac      	LDD  R26,Y+12
00012f 85bd      	LDD  R27,Y+12+1
000130 e0e0      	LDI  R30,LOW(0)
000131 e0f0      	LDI  R31,HIGH(0)
000132 93ed      	ST   X+,R30
000133 93fc      	ST   X,R31
                 _0x2000016:
000134 89ea      	LDD  R30,Y+18
000135 89fb      	LDD  R31,Y+18+1
000136 9631      	ADIW R30,1
000137 8bea      	STD  Y+18,R30
000138 8bfb      	STD  Y+18+1,R31
000139 9731      	SBIW R30,1
00013a 91e4      	LPM  R30,Z
00013b 2f2e      	MOV  R18,R30
00013c 30e0      	CPI  R30,0
00013d f409      	BRNE PC+2
00013e c115      	RJMP _0x2000018
00013f 2fe1      	MOV  R30,R17
000140 30e0      	CPI  R30,0
000141 f439      	BRNE _0x200001C
000142 3225      	CPI  R18,37
000143 f411      	BRNE _0x200001D
000144 e011      	LDI  R17,LOW(1)
000145 c002      	RJMP _0x200001E
                 _0x200001D:
000146 940e 037b 	CALL SUBOPT_0x0
                 _0x200001E:
000148 c10a      	RJMP _0x200001B
                 _0x200001C:
000149 30e1      	CPI  R30,LOW(0x1)
00014a f4a9      	BRNE _0x200001F
00014b 3225      	CPI  R18,37
00014c f419      	BRNE _0x2000020
00014d 940e 037b 	CALL SUBOPT_0x0
00014f c102      	RJMP _0x20000CC
                 _0x2000020:
000150 e012      	LDI  R17,LOW(2)
000151 e040      	LDI  R20,LOW(0)
000152 e000      	LDI  R16,LOW(0)
000153 322d      	CPI  R18,45
000154 f411      	BRNE _0x2000021
000155 e001      	LDI  R16,LOW(1)
000156 c0fc      	RJMP _0x200001B
                 _0x2000021:
000157 322b      	CPI  R18,43
000158 f411      	BRNE _0x2000022
000159 e24b      	LDI  R20,LOW(43)
00015a c0f8      	RJMP _0x200001B
                 _0x2000022:
00015b 3220      	CPI  R18,32
00015c f411      	BRNE _0x2000023
00015d e240      	LDI  R20,LOW(32)
00015e c0f4      	RJMP _0x200001B
                 _0x2000023:
00015f c002      	RJMP _0x2000024
                 _0x200001F:
000160 30e2      	CPI  R30,LOW(0x2)
000161 f439      	BRNE _0x2000025
                 _0x2000024:
000162 e050      	LDI  R21,LOW(0)
000163 e013      	LDI  R17,LOW(3)
000164 3320      	CPI  R18,48
000165 f411      	BRNE _0x2000026
000166 6800      	ORI  R16,LOW(128)
000167 c0eb      	RJMP _0x200001B
                 _0x2000026:
000168 c003      	RJMP _0x2000027
                 _0x2000025:
000169 30e3      	CPI  R30,LOW(0x3)
00016a f009      	BREQ PC+2
00016b c0e7      	RJMP _0x200001B
                 _0x2000027:
00016c 3320      	CPI  R18,48
00016d f010      	BRLO _0x200002A
00016e 332a      	CPI  R18,58
00016f f008      	BRLO _0x200002B
                 _0x200002A:
000170 c007      	RJMP _0x2000029
                 _0x200002B:
000171 e0aa      	LDI  R26,LOW(10)
000172 9f5a      	MUL  R21,R26
000173 2d50      	MOV  R21,R0
000174 2fe2      	MOV  R30,R18
000175 53e0      	SUBI R30,LOW(48)
000176 0f5e      	ADD  R21,R30
000177 c0db      	RJMP _0x200001B
                 _0x2000029:
000178 2fe2      	MOV  R30,R18
000179 36e3      	CPI  R30,LOW(0x63)
00017a f449      	BRNE _0x200002F
00017b 940e 0382 	CALL SUBOPT_0x1
00017d 89e8      	LDD  R30,Y+16
00017e 89f9      	LDD  R31,Y+16+1
00017f 81a4      	LDD  R26,Z+4
000180 93aa      	ST   -Y,R26
000181 940e 0388 	CALL SUBOPT_0x2
000183 c0ce      	RJMP _0x2000030
                 _0x200002F:
000184 37e3      	CPI  R30,LOW(0x73)
000185 f441      	BRNE _0x2000032
000186 940e 0382 	CALL SUBOPT_0x1
000188 940e 038e 	CALL SUBOPT_0x3
00018a 940e 0362 	CALL _strlen
00018c 2f1e      	MOV  R17,R30
00018d c00a      	RJMP _0x2000033
                 _0x2000032:
00018e 37e0      	CPI  R30,LOW(0x70)
00018f f461      	BRNE _0x2000035
000190 940e 0382 	CALL SUBOPT_0x1
000192 940e 038e 	CALL SUBOPT_0x3
000194 940e 036e 	CALL _strlenf
000196 2f1e      	MOV  R17,R30
000197 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000198 6002      	ORI  R16,LOW(2)
000199 770f      	ANDI R16,LOW(127)
00019a e030      	LDI  R19,LOW(0)
00019b c034      	RJMP _0x2000036
                 _0x2000035:
00019c 36e4      	CPI  R30,LOW(0x64)
00019d f011      	BREQ _0x2000039
00019e 36e9      	CPI  R30,LOW(0x69)
00019f f411      	BRNE _0x200003A
                 _0x2000039:
0001a0 6004      	ORI  R16,LOW(4)
0001a1 c002      	RJMP _0x200003B
                 _0x200003A:
0001a2 37e5      	CPI  R30,LOW(0x75)
0001a3 f431      	BRNE _0x200003C
                 _0x200003B:
0001a4 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
0001a5 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0001a6 83ee      	STD  Y+6,R30
0001a7 83ff      	STD  Y+6+1,R31
0001a8 e015      	LDI  R17,LOW(5)
0001a9 c00c      	RJMP _0x200003D
                 _0x200003C:
0001aa 35e8      	CPI  R30,LOW(0x58)
0001ab f411      	BRNE _0x200003F
0001ac 6008      	ORI  R16,LOW(8)
0001ad c003      	RJMP _0x2000040
                 _0x200003F:
0001ae 37e8      	CPI  R30,LOW(0x78)
0001af f009      	BREQ PC+2
0001b0 c0a1      	RJMP _0x2000071
                 _0x2000040:
0001b1 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
0001b2 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0001b3 83ee      	STD  Y+6,R30
0001b4 83ff      	STD  Y+6+1,R31
0001b5 e014      	LDI  R17,LOW(4)
                 _0x200003D:
0001b6 ff02      	SBRS R16,2
0001b7 c014      	RJMP _0x2000042
0001b8 940e 0382 	CALL SUBOPT_0x1
0001ba 940e 0398 	CALL SUBOPT_0x4
0001bc 85ab      	LDD  R26,Y+11
0001bd 23aa      	TST  R26
0001be f43a      	BRPL _0x2000043
0001bf 85ea      	LDD  R30,Y+10
0001c0 85fb      	LDD  R31,Y+10+1
0001c1 940e 03be 	CALL __ANEGW1
0001c3 87ea      	STD  Y+10,R30
0001c4 87fb      	STD  Y+10+1,R31
0001c5 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0001c6 3040      	CPI  R20,0
0001c7 f011      	BREQ _0x2000044
0001c8 5f1f      	SUBI R17,-LOW(1)
0001c9 c001      	RJMP _0x2000045
                 _0x2000044:
0001ca 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0001cb c004      	RJMP _0x2000046
                 _0x2000042:
0001cc 940e 0382 	CALL SUBOPT_0x1
0001ce 940e 0398 	CALL SUBOPT_0x4
                 _0x2000046:
                 _0x2000036:
0001d0 fd00      	SBRC R16,0
0001d1 c011      	RJMP _0x2000047
                 _0x2000048:
0001d2 1715      	CP   R17,R21
0001d3 f478      	BRSH _0x200004A
0001d4 ff07      	SBRS R16,7
0001d5 c008      	RJMP _0x200004B
0001d6 ff02      	SBRS R16,2
0001d7 c004      	RJMP _0x200004C
0001d8 7f0b      	ANDI R16,LOW(251)
0001d9 2f24      	MOV  R18,R20
0001da 5011      	SUBI R17,LOW(1)
0001db c001      	RJMP _0x200004D
                 _0x200004C:
0001dc e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001dd c001      	RJMP _0x200004E
                 _0x200004B:
0001de e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001df 940e 037b 	CALL SUBOPT_0x0
0001e1 5051      	SUBI R21,LOW(1)
0001e2 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001e3 2f31      	MOV  R19,R17
0001e4 ff01      	SBRS R16,1
0001e5 c017      	RJMP _0x200004F
                 _0x2000050:
0001e6 3030      	CPI  R19,0
0001e7 f0a1      	BREQ _0x2000052
0001e8 ff03      	SBRS R16,3
0001e9 c006      	RJMP _0x2000053
0001ea 81ee      	LDD  R30,Y+6
0001eb 81ff      	LDD  R31,Y+6+1
0001ec 9125      	LPM  R18,Z+
0001ed 83ee      	STD  Y+6,R30
0001ee 83ff      	STD  Y+6+1,R31
0001ef c005      	RJMP _0x2000054
                 _0x2000053:
0001f0 81ae      	LDD  R26,Y+6
0001f1 81bf      	LDD  R27,Y+6+1
0001f2 912d      	LD   R18,X+
0001f3 83ae      	STD  Y+6,R26
0001f4 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001f5 940e 037b 	CALL SUBOPT_0x0
0001f7 3050      	CPI  R21,0
0001f8 f009      	BREQ _0x2000055
0001f9 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001fa 5031      	SUBI R19,LOW(1)
0001fb cfea      	RJMP _0x2000050
                 _0x2000052:
0001fc c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001fd e320      	LDI  R18,LOW(48)
0001fe 81ee      	LDD  R30,Y+6
0001ff 81ff      	LDD  R31,Y+6+1
000200 940e 03cb 	CALL __GETW1PF
000202 87e8      	STD  Y+8,R30
000203 87f9      	STD  Y+8+1,R31
000204 81ee      	LDD  R30,Y+6
000205 81ff      	LDD  R31,Y+6+1
000206 9632      	ADIW R30,2
000207 83ee      	STD  Y+6,R30
000208 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000209 85e8      	LDD  R30,Y+8
00020a 85f9      	LDD  R31,Y+8+1
00020b 85aa      	LDD  R26,Y+10
00020c 85bb      	LDD  R27,Y+10+1
00020d 17ae      	CP   R26,R30
00020e 07bf      	CPC  R27,R31
00020f f050      	BRLO _0x200005C
000210 5f2f      	SUBI R18,-LOW(1)
000211 85a8      	LDD  R26,Y+8
000212 85b9      	LDD  R27,Y+8+1
000213 85ea      	LDD  R30,Y+10
000214 85fb      	LDD  R31,Y+10+1
000215 1bea      	SUB  R30,R26
000216 0bfb      	SBC  R31,R27
000217 87ea      	STD  Y+10,R30
000218 87fb      	STD  Y+10+1,R31
000219 cfef      	RJMP _0x200005A
                 _0x200005C:
00021a 332a      	CPI  R18,58
00021b f028      	BRLO _0x200005D
00021c ff03      	SBRS R16,3
00021d c002      	RJMP _0x200005E
00021e 5f29      	SUBI R18,-LOW(7)
00021f c001      	RJMP _0x200005F
                 _0x200005E:
000220 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000221 fd04      	SBRC R16,4
000222 c01a      	RJMP _0x2000061
000223 3321      	CPI  R18,49
000224 f420      	BRSH _0x2000063
000225 85a8      	LDD  R26,Y+8
000226 85b9      	LDD  R27,Y+8+1
000227 9711      	SBIW R26,1
000228 f409      	BRNE _0x2000062
                 _0x2000063:
000229 c009      	RJMP _0x20000CD
                 _0x2000062:
00022a 1753      	CP   R21,R19
00022b f010      	BRLO _0x2000067
00022c ff00      	SBRS R16,0
00022d c001      	RJMP _0x2000068
                 _0x2000067:
00022e c013      	RJMP _0x2000066
                 _0x2000068:
00022f e220      	LDI  R18,LOW(32)
000230 ff07      	SBRS R16,7
000231 c00b      	RJMP _0x2000069
000232 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000233 6100      	ORI  R16,LOW(16)
000234 ff02      	SBRS R16,2
000235 c007      	RJMP _0x200006A
000236 7f0b      	ANDI R16,LOW(251)
000237 934a      	ST   -Y,R20
000238 940e 0388 	CALL SUBOPT_0x2
00023a 3050      	CPI  R21,0
00023b f009      	BREQ _0x200006B
00023c 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
00023d 940e 037b 	CALL SUBOPT_0x0
00023f 3050      	CPI  R21,0
000240 f009      	BREQ _0x200006C
000241 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000242 5031      	SUBI R19,LOW(1)
000243 85a8      	LDD  R26,Y+8
000244 85b9      	LDD  R27,Y+8+1
000245 9712      	SBIW R26,2
000246 f008      	BRLO _0x2000059
000247 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000248 ff00      	SBRS R16,0
000249 c008      	RJMP _0x200006D
                 _0x200006E:
00024a 3050      	CPI  R21,0
00024b f031      	BREQ _0x2000070
00024c 5051      	SUBI R21,LOW(1)
00024d e2e0      	LDI  R30,LOW(32)
00024e 93ea      	ST   -Y,R30
00024f 940e 0388 	CALL SUBOPT_0x2
000251 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000252 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000253 cee0      	RJMP _0x2000016
                 _0x2000018:
000254 85ac      	LDD  R26,Y+12
000255 85bd      	LDD  R27,Y+12+1
000256 940e 03c7 	CALL __GETW1P
000258 940e 03db 	CALL __LOADLOCR6
00025a 9664      	ADIW R28,20
00025b 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00025c 92ff      	PUSH R15
00025d 2ef8      	MOV  R15,R24
00025e 9726      	SBIW R28,6
00025f 940e 03d6 	CALL __SAVELOCR4
000261 940e 03a0 	CALL SUBOPT_0x5
000263 9730      	SBIW R30,0
000264 f419      	BRNE _0x2000072
000265 efef      	LDI  R30,LOW(65535)
000266 efff      	LDI  R31,HIGH(65535)
000267 c023      	RJMP _0x2080002
                 _0x2000072:
000268 01de      	MOVW R26,R28
000269 9616      	ADIW R26,6
00026a 940e 03ba 	CALL __ADDW2R15
00026c 018d      	MOVW R16,R26
00026d 940e 03a0 	CALL SUBOPT_0x5
00026f 83ee      	STD  Y+6,R30
000270 83ff      	STD  Y+6+1,R31
000271 e0e0      	LDI  R30,LOW(0)
000272 87e8      	STD  Y+8,R30
000273 87e9      	STD  Y+8+1,R30
000274 01de      	MOVW R26,R28
000275 961a      	ADIW R26,10
000276 940e 03ba 	CALL __ADDW2R15
000278 940e 03c7 	CALL __GETW1P
00027a 93fa      	ST   -Y,R31
00027b 93ea      	ST   -Y,R30
00027c 931a      	ST   -Y,R17
00027d 930a      	ST   -Y,R16
00027e eee8      	LDI  R30,LOW(_put_buff_G100)
00027f e0f0      	LDI  R31,HIGH(_put_buff_G100)
000280 93fa      	ST   -Y,R31
000281 93ea      	ST   -Y,R30
000282 01de      	MOVW R26,R28
000283 961a      	ADIW R26,10
000284 dea3      	RCALL __print_G100
000285 019f      	MOVW R18,R30
000286 81ae      	LDD  R26,Y+6
000287 81bf      	LDD  R27,Y+6+1
000288 e0e0      	LDI  R30,LOW(0)
000289 93ec      	ST   X,R30
00028a 01f9      	MOVW R30,R18
                 _0x2080002:
00028b 940e 03dd 	CALL __LOADLOCR4
00028d 962a      	ADIW R28,10
00028e 90ff      	POP  R15
00028f 9508      	RET
                 ; .FEND
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G101:
                 ; .FSTART __lcd_delay_G101
000290 e0ff          ldi   r31,15
                 __lcd_delay0:
000291 95fa          dec   r31
000292 f7f1          brne  __lcd_delay0
000293 9508      	RET
                 ; .FEND
                 __lcd_ready:
                 ; .FSTART __lcd_ready
000294 b3a4          in    r26,__lcd_direction
000295 70af          andi  r26,0xf                 ;set as input
000296 bba4          out   __lcd_direction,r26
000297 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
000298 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
000299 dff6      	RCALL __lcd_delay_G101
00029a 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
00029b dff4      	RCALL __lcd_delay_G101
00029c b3a3          in    r26,__lcd_pin
00029d 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
00029e dff1      	RCALL __lcd_delay_G101
00029f 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0002a0 dfef      	RCALL __lcd_delay_G101
0002a1 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0002a2 fda7          sbrc  r26,__lcd_busy_flag
0002a3 cff5          rjmp  __lcd_busy
0002a4 9508      	RET
                 ; .FEND
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
0002a5 7fa0          andi  r26,0xf0
0002a6 2bab          or    r26,r27
0002a7 bba5          out   __lcd_port,r26          ;write
0002a8 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0002a9 940e 0290 	CALL __lcd_delay_G101
0002ab 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0002ac 940e 0290 	CALL __lcd_delay_G101
0002ae 9508      	RET
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0002af 93aa      	ST   -Y,R26
0002b0 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
0002b1 b3a4          in    r26,__lcd_direction
0002b2 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
0002b3 bba4          out   __lcd_direction,r26
0002b4 b3b5          in    r27,__lcd_port
0002b5 70bf          andi  r27,0xf
0002b6 81a8          ld    r26,y
0002b7 dfed      	RCALL __lcd_write_nibble_G101
0002b8 81a8          ld    r26,y
0002b9 95a2          swap  r26
0002ba dfea      	RCALL __lcd_write_nibble_G101
0002bb 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0002bc 940c 0360 	JMP  _0x2080001
                 ; .FEND
                 __lcd_read_nibble_G101:
                 ; .FSTART __lcd_read_nibble_G101
0002be 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0002bf 940e 0290 	CALL __lcd_delay_G101
0002c1 b3e3          in    r30,__lcd_pin           ;read
0002c2 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0002c3 940e 0290 	CALL __lcd_delay_G101
0002c5 7fe0          andi  r30,0xf0
0002c6 9508      	RET
                 ; .FEND
                 _lcd_read_byte0_G101:
                 ; .FSTART _lcd_read_byte0_G101
0002c7 940e 0290 	CALL __lcd_delay_G101
0002c9 dff4      	RCALL __lcd_read_nibble_G101
0002ca 2fae          mov   r26,r30
0002cb dff2      	RCALL __lcd_read_nibble_G101
0002cc 98a9          cbi   __lcd_port,__lcd_rd     ;RD=0
0002cd 95e2          swap  r30
0002ce 2bea          or    r30,r26
0002cf 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0002d0 93aa      	ST   -Y,R26
0002d1 940e 0294 	CALL __lcd_ready
0002d3 81e8      	LD   R30,Y
0002d4 e0f0      	LDI  R31,0
0002d5 59ec      	SUBI R30,LOW(-__base_y_G101)
0002d6 4ffd      	SBCI R31,HIGH(-__base_y_G101)
0002d7 81e0      	LD   R30,Z
0002d8 81a9      	LDD  R26,Y+1
0002d9 0fae      	ADD  R26,R30
0002da 940e 02af 	CALL __lcd_write_data
0002dc 80b9      	LDD  R11,Y+1
0002dd 80a8      	LDD  R10,Y+0
0002de 9622      	ADIW R28,2
0002df 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0002e0 940e 0294 	CALL __lcd_ready
0002e2 e0a2      	LDI  R26,LOW(2)
0002e3 940e 02af 	CALL __lcd_write_data
0002e5 940e 0294 	CALL __lcd_ready
0002e7 e0ac      	LDI  R26,LOW(12)
0002e8 940e 02af 	CALL __lcd_write_data
0002ea 940e 0294 	CALL __lcd_ready
0002ec e0a1      	LDI  R26,LOW(1)
0002ed 940e 02af 	CALL __lcd_write_data
0002ef e0e0      	LDI  R30,LOW(0)
0002f0 2eae      	MOV  R10,R30
0002f1 2ebe      	MOV  R11,R30
0002f2 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0002f3 93aa      	ST   -Y,R26
0002f4 93ef          push r30
0002f5 93ff          push r31
0002f6 81a8          ld   r26,y
0002f7 9468          set
0002f8 30aa          cpi  r26,10
0002f9 f019          breq __lcd_putchar1
0002fa 94e8          clt
0002fb 14bd      	CP   R11,R13
0002fc f030      	BRLO _0x2020004
                 	__lcd_putchar1:
0002fd 94a3      	INC  R10
0002fe e0e0      	LDI  R30,LOW(0)
0002ff 93ea      	ST   -Y,R30
000300 2daa      	MOV  R26,R10
000301 dfce      	RCALL _lcd_gotoxy
000302 f036      	brts __lcd_putchar0
                 _0x2020004:
000303 94b3      	INC  R11
000304 df8f          rcall __lcd_ready
000305 9aa8          sbi  __lcd_port,__lcd_rs ;RS=1
000306 81a8      	LD   R26,Y
000307 940e 02af 	CALL __lcd_write_data
                 __lcd_putchar0:
000309 91ff          pop  r31
00030a 91ef          pop  r30
00030b 940c 0360 	JMP  _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00030d 93ba      	ST   -Y,R27
00030e 93aa      	ST   -Y,R26
00030f 931a      	ST   -Y,R17
                 _0x2020005:
000310 81a9      	LDD  R26,Y+1
000311 81ba      	LDD  R27,Y+1+1
000312 91ed      	LD   R30,X+
000313 83a9      	STD  Y+1,R26
000314 83ba      	STD  Y+1+1,R27
000315 2f1e      	MOV  R17,R30
000316 30e0      	CPI  R30,0
000317 f019      	BREQ _0x2020007
000318 2fa1      	MOV  R26,R17
000319 dfd9      	RCALL _lcd_putchar
00031a cff5      	RJMP _0x2020005
                 _0x2020007:
00031b 8118      	LDD  R17,Y+0
00031c 9623      	ADIW R28,3
00031d 9508      	RET
                 ; .FEND
                 __long_delay_G101:
                 ; .FSTART __long_delay_G101
00031e 27aa          clr   r26
00031f 27bb          clr   r27
                 __long_delay0:
000320 9711          sbiw  r26,1         ;2 cycles
000321 f7f1          brne  __long_delay0 ;2 cycles
000322 9508      	RET
                 ; .FEND
                 __lcd_init_write_G101:
                 ; .FSTART __lcd_init_write_G101
000323 93aa      	ST   -Y,R26
000324 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000325 b3a4          in    r26,__lcd_direction
000326 6fa7          ori   r26,0xf7                ;set as output
000327 bba4          out   __lcd_direction,r26
000328 b3b5          in    r27,__lcd_port
000329 70bf          andi  r27,0xf
00032a 81a8          ld    r26,y
00032b 940e 02a5 	CALL __lcd_write_nibble_G101
00032d 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
00032e c031      	RJMP _0x2080001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00032f 93aa      	ST   -Y,R26
000330 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000331 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
000332 80d8      	LDD  R13,Y+0
000333 81e8      	LD   R30,Y
000334 58e0      	SUBI R30,-LOW(128)
                +
000335 93e0 0266+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000337 81e8      	LD   R30,Y
000338 54e0      	SUBI R30,-LOW(192)
                +
000339 93e0 0267+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
00033b 940e 03a7 	CALL SUBOPT_0x6
00033d 940e 03a7 	CALL SUBOPT_0x6
00033f 940e 03a7 	CALL SUBOPT_0x6
000341 dfdc      	RCALL __long_delay_G101
000342 e2a0      	LDI  R26,LOW(32)
000343 dfdf      	RCALL __lcd_init_write_G101
000344 dfd9      	RCALL __long_delay_G101
000345 e2a8      	LDI  R26,LOW(40)
000346 940e 03ac 	CALL SUBOPT_0x7
000348 e0a4      	LDI  R26,LOW(4)
000349 940e 03ac 	CALL SUBOPT_0x7
00034b e8a5      	LDI  R26,LOW(133)
00034c 940e 03ac 	CALL SUBOPT_0x7
00034e b3a4          in    r26,__lcd_direction
00034f 70af          andi  r26,0xf                 ;set as input
000350 bba4          out   __lcd_direction,r26
000351 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
000352 940e 02c7 	CALL _lcd_read_byte0_G101
000354 30e5      	CPI  R30,LOW(0x5)
000355 f011      	BREQ _0x202000B
000356 e0e0      	LDI  R30,LOW(0)
000357 c008      	RJMP _0x2080001
                 _0x202000B:
000358 940e 0294 	CALL __lcd_ready
00035a e0a6      	LDI  R26,LOW(6)
00035b 940e 02af 	CALL __lcd_write_data
00035d 940e 02e0 	CALL _lcd_clear
00035f e0e1      	LDI  R30,LOW(1)
                 _0x2080001:
000360 9621      	ADIW R28,1
000361 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000362 93ba      	ST   -Y,R27
000363 93aa      	ST   -Y,R26
000364 91a9          ld   r26,y+
000365 91b9          ld   r27,y+
000366 27ee          clr  r30
000367 27ff          clr  r31
                 strlen0:
000368 916d          ld   r22,x+
000369 2366          tst  r22
00036a f011          breq strlen1
00036b 9631          adiw r30,1
00036c cffb          rjmp strlen0
                 strlen1:
00036d 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00036e 93ba      	ST   -Y,R27
00036f 93aa      	ST   -Y,R26
000370 27aa          clr  r26
000371 27bb          clr  r27
000372 91e9          ld   r30,y+
000373 91f9          ld   r31,y+
                 strlenf0:
000374 9005      	lpm  r0,z+
000375 2000          tst  r0
000376 f011          breq strlenf1
000377 9611          adiw r26,1
000378 cffb          rjmp strlenf0
                 strlenf1:
000379 01fd          movw r30,r26
00037a 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _b:
000260           	.BYTE 0x4
                 __base_y_G101:
000264           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x0:
00037b 932a      	ST   -Y,R18
00037c 85ad      	LDD  R26,Y+13
00037d 85be      	LDD  R27,Y+13+1
00037e 85ef      	LDD  R30,Y+15
00037f 89f8      	LDD  R31,Y+15+1
000380 9509      	ICALL
000381 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
000382 89e8      	LDD  R30,Y+16
000383 89f9      	LDD  R31,Y+16+1
000384 9734      	SBIW R30,4
000385 8be8      	STD  Y+16,R30
000386 8bf9      	STD  Y+16+1,R31
000387 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000388 85ad      	LDD  R26,Y+13
000389 85be      	LDD  R27,Y+13+1
00038a 85ef      	LDD  R30,Y+15
00038b 89f8      	LDD  R31,Y+15+1
00038c 9509      	ICALL
00038d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
00038e 89a8      	LDD  R26,Y+16
00038f 89b9      	LDD  R27,Y+16+1
000390 9614      	ADIW R26,4
000391 940e 03c7 	CALL __GETW1P
000393 83ee      	STD  Y+6,R30
000394 83ff      	STD  Y+6+1,R31
000395 81ae      	LDD  R26,Y+6
000396 81bf      	LDD  R27,Y+6+1
000397 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000398 89a8      	LDD  R26,Y+16
000399 89b9      	LDD  R27,Y+16+1
00039a 9614      	ADIW R26,4
00039b 940e 03c7 	CALL __GETW1P
00039d 87ea      	STD  Y+10,R30
00039e 87fb      	STD  Y+10+1,R31
00039f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
0003a0 01de      	MOVW R26,R28
0003a1 961c      	ADIW R26,12
0003a2 940e 03ba 	CALL __ADDW2R15
0003a4 940e 03c7 	CALL __GETW1P
0003a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
0003a7 940e 031e 	CALL __long_delay_G101
0003a9 e3a0      	LDI  R26,LOW(48)
0003aa 940c 0323 	JMP  __lcd_init_write_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0003ac 940e 02af 	CALL __lcd_write_data
0003ae 940c 031e 	JMP  __long_delay_G101
                 
                 
                 	.CSEG
                 _delay_ms:
0003b0 9610      	adiw r26,0
0003b1 f039      	breq __delay_ms1
                 __delay_ms0:
0003b2 95a8      	wdr
                +
0003b3 ed80     +LDI R24 , LOW ( 0x7D0 )
0003b4 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0003b5 9701     +SBIW R24 , 1
0003b6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0003b7 9711      	sbiw r26,1
0003b8 f7c9      	brne __delay_ms0
                 __delay_ms1:
0003b9 9508      	ret
                 
                 __ADDW2R15:
0003ba 2400      	CLR  R0
0003bb 0daf      	ADD  R26,R15
0003bc 1db0      	ADC  R27,R0
0003bd 9508      	RET
                 
                 __ANEGW1:
0003be 95f1      	NEG  R31
0003bf 95e1      	NEG  R30
0003c0 40f0      	SBCI R31,0
0003c1 9508      	RET
                 
                 __CWD1:
0003c2 2f6f      	MOV  R22,R31
0003c3 0f66      	ADD  R22,R22
0003c4 0b66      	SBC  R22,R22
0003c5 2f76      	MOV  R23,R22
0003c6 9508      	RET
                 
                 __GETW1P:
0003c7 91ed      	LD   R30,X+
0003c8 91fc      	LD   R31,X
0003c9 9711      	SBIW R26,1
0003ca 9508      	RET
                 
                 __GETW1PF:
0003cb 9005      	LPM  R0,Z+
0003cc 91f4      	LPM  R31,Z
0003cd 2de0      	MOV  R30,R0
0003ce 9508      	RET
                 
                 __PUTPARD1:
0003cf 937a      	ST   -Y,R23
0003d0 936a      	ST   -Y,R22
0003d1 93fa      	ST   -Y,R31
0003d2 93ea      	ST   -Y,R30
0003d3 9508      	RET
                 
                 __SAVELOCR6:
0003d4 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003d5 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003d6 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003d7 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003d8 931a      	ST   -Y,R17
0003d9 930a      	ST   -Y,R16
0003da 9508      	RET
                 
                 __LOADLOCR6:
0003db 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003dc 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003dd 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003de 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003df 8119      	LDD  R17,Y+1
0003e0 8108      	LD   R16,Y
0003e1 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  22 r1 :   1 r2 :   0 r3 :   0 r4 :   5 r5 :   1 r6 :   5 r7 :   2 
r8 :   2 r9 :   1 r10:   4 r11:   4 r12:   0 r13:   2 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:  19 r23:   2 
r24:  11 r25:   3 r26: 139 r27:  42 r28:  14 r29:   1 r30: 187 r31:  65 
x  :  23 y  : 163 z  :  15 
Registers used: 31 out of 35 (88.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :  11 
adiw  :  25 and   :   0 andi  :  10 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  18 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   1 brmi  :   1 brne  :  25 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  74 
cbi   :  10 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  13 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   0 
cp    :   6 cpc   :   4 cpi   :  33 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   8 inc   :   2 jmp   :  26 ld    :  23 ldd   :  77 ldi   : 106 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  22 movw  :  27 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   8 out   :  13 pop   :   3 push  :   3 rcall :  15 ret   :  30 
reti  :   0 rjmp  :  62 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :   9 sbic  :   8 sbis  :   0 sbiw  :  19 sbr   :   0 sbrc  :   3 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  58 std   :  31 sts   :   2 sub   :   1 subi  :  16 swap  :   2 
tst   :   4 wdr   :   1 
Instructions used: 58 out of 116 (50.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0007c4   1944     44   1988   32768   6.1%
[.dseg] 0x000060 0x000268      0      8      8    2048   0.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 10 warnings
